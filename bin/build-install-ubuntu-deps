#!/usr/bin/bash

# Install Erlang, Elixir and Node.js from packages on Ubuntu
# Adapted from: https://github.com/cogini/mix-deploy-example/blob/master/bin/build-install-deps-ubuntu

# Exit on errors
set -e

# Environment vars

# In order to make things more predictable, install specific versions of
# Erlang and Elixir rather than just taking the latest available
ERL_VERSION="${ERL_VERSION:-23.2.3-1}"
ELIXIR_VERSION="${ELIXIR_VERSION:-1.11.2}"

# Make sure we have a good LANG
export LANG="${LANG:-en_US.UTF-8}"

echo "==> Initialize package manager and install basic utilities"

export DEBIAN_FRONTEND=noninteractive

echo "===> Updating package repos"
apt-get update -qq

echo "===> Installing locale $LANG"
apt-get -qq install locales
locale-gen "$LANG"

echo "===> Updating system packages"
apt-get -qq upgrade

echo "===> Installing apt deps"
apt-get -qq install dialog apt-utils

echo "===> Installing utilities"
apt-get -qq install wget curl unzip make git

echo "==> Install Erlang, Elixir and Node.js from packages"

# Get UBUNTU_CODENAME
source /etc/os-release

echo "===> Installing Erlang package deps"
apt-get -qq install procps libc6 libncurses5 libssl1.0 libgcc1 libstdc++6 libsctp1 libwxbase3.0-0v5 libwxgtk3.0-gtk3-0v5
apt-get -f install

echo "===> Installing Erlang"
# -P: prefix directory
wget --no-verbose -P /tmp/ "https://packages.erlang-solutions.com/erlang/debian/pool/esl-erlang_${ERL_VERSION}~ubuntu~${UBUNTU_CODENAME}_amd64.deb"

# Install package
dpkg -i "/tmp/esl-erlang_${ERL_VERSION}~ubuntu~${UBUNTU_CODENAME}_amd64.deb"

echo "===> Installing Elixir ${ELIXIR_VERSION}"

# -O: output file
wget --no-verbose "https://github.com/elixir-lang/elixir/releases/download/v${ELIXIR_VERSION}/Precompiled.zip" -O /tmp/Precompiled.zip

# -qo: quiet, overwrite
# -d: extract to
unzip -qo /tmp/Precompiled.zip -d /usr/local

echo "===> Installing Node.js"
apt-get -qq install nodejs npm

# -f: fix broken, in case broken deps
apt-get -f install
